{
  "In": [
    "",
    "import inspect\nimport sys, time, pathlib\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\n# Make project root importable\nroot = pathlib.Path('..', '..').resolve()\nsys.path.append(str(root))\n\nfrom quasar.planner import Planner\nfrom quasar.simulation_engine import SimulationEngine\nfrom benchmarks.circuits import ghz_circuit, grover_circuit",
    "alphas = [0.5, 1, 2, 5]\ncircuits = {\n    'GHZ_6': ghz_circuit(6),\n    'Grover_3': grover_circuit(3, 1),\n}\nrecords = []\nfor name, circ in circuits.items():\n    for alpha in alphas:\n        kwargs = {'conversion_cost_multiplier': alpha}\n        if 'compare_pre_pass_costs' in inspect.signature(Planner).parameters:\n            kwargs['compare_pre_pass_costs'] = True\n        planner = Planner(**kwargs)\n        engine = SimulationEngine(planner=planner)\n        start = time.perf_counter()\n        result = engine.simulate(circ)\n        elapsed = time.perf_counter() - start\n        steps = [s.backend.name for s in result.plan.steps]\n        records.append({'circuit': name, 'alpha': alpha, 'steps': steps, 'runtime': elapsed})\nrecords\nresults = records\ncircuits = list(circuits.keys())",
    "for name in circuits:\n    subset = [r for r in records if r['circuit'] == name]\n    max_frag = max(len(r['steps']) for r in subset)\n    heat = pd.DataFrame(index=alphas, columns=range(max_frag))\n    for r in subset:\n        heat.loc[r['alpha'], :len(r['steps'])-1] = r['steps']\n    backends = sorted({b for row in heat.values for b in row if b is not None})\n    mapping = {b: i for i, b in enumerate(backends)}\n    heat_numeric = heat.replace(mapping).astype(float)\n    plt.figure(figsize=(1.2*max_frag, 1.2*len(alphas)))\n    sns.heatmap(heat_numeric, annot=heat, fmt='', cmap='tab10', cbar=False)\n    plt.title(f'Backend per fragment for {name}')\n    plt.xlabel('Fragment')\n    plt.ylabel('\u03b1')\n    plt.show()\n\n    runtime_df = pd.DataFrame({'alpha': [r['alpha'] for r in subset],\n                               'runtime': [r['runtime'] for r in subset]})\n    plt.figure()\n    sns.lineplot(data=runtime_df, x='alpha', y='runtime', marker='o')\n    plt.title(f'Runtime vs \u03b1 for {name}')\n    plt.xlabel('\u03b1')\n    plt.ylabel('Runtime (s)')\n    plt.show()",
    "import pandas as pd\nfrom benchmarks.stats_utils import stats_table\n\ndef add_stats(df, quasar_col='QuASAr', baseline_cols=None, test='ttest', correction='bonferroni'):\n    \"\"\"Compute statistics comparing QuASAr with baselines.\n\n    Parameters\n    ----------\n    df : pandas.DataFrame\n        DataFrame with per-circuit results. One column must correspond to QuASAr,\n        others to baselines.\n    quasar_col : str\n        Name of the column containing QuASAr results.\n    baseline_cols : list[str] | None\n        Columns to treat as baselines. Defaults to all columns except quasar_col.\n    test : str\n        'ttest' or 'wilcoxon'.\n    correction : str\n        'bonferroni' or 'fdr_bh'.\n\n    Returns\n    -------\n    pd.DataFrame\n        Table with baseline name, statistic, corrected p-value, and effect size.\n    \"\"\"\n    if baseline_cols is None:\n        baseline_cols = [c for c in df.columns if c != quasar_col]\n    baselines = {c: df[c] for c in baseline_cols}\n    return stats_table(df[quasar_col], baselines, test=test, correction=correction)\n\n# Example usage after computing results DataFrame named `results_df`:\n# stats_df = add_stats(results_df)\n# stats_df",
    "# Record parameters and results\nimport json, pathlib\ntry:\n    import ipynbname\n    nb_name = ipynbname.path().stem\nexcept Exception:  # pragma: no cover\n    nb_name = 'notebook'\n\n# Collect simple parameters from globals\n_params = {\n    k: v for k, v in globals().items()\n    if not k.startswith('_') and isinstance(v, (int, float, str, bool, list, dict, tuple))\n}\npathlib.Path('../results').mkdir(exist_ok=True)\nwith open(f\"../results/{nb_name}_params.json\", 'w') as f:\n    json.dump(_params, f, indent=2)\nif 'results' in globals():\n    try:\n        with open(f\"../results/{nb_name}_results.json\", 'w') as f:\n            json.dump(results, f, indent=2)\n    except TypeError:\n        pass\nprint(json.dumps(_params, indent=2))"
  ],
  "Out": {},
  "alphas": [
    0.5,
    1,
    2,
    5
  ],
  "circuits": [
    "GHZ_6",
    "Grover_3"
  ],
  "records": [
    {
      "circuit": "GHZ_6",
      "alpha": 0.5,
      "steps": [
        "TABLEAU",
        "TABLEAU",
        "TABLEAU",
        "TABLEAU",
        "TABLEAU",
        "TABLEAU"
      ],
      "runtime": 0.002997664999384142
    },
    {
      "circuit": "GHZ_6",
      "alpha": 1,
      "steps": [
        "TABLEAU",
        "TABLEAU",
        "TABLEAU",
        "TABLEAU",
        "TABLEAU",
        "TABLEAU"
      ],
      "runtime": 0.002592720999928133
    },
    {
      "circuit": "GHZ_6",
      "alpha": 2,
      "steps": [
        "TABLEAU",
        "TABLEAU",
        "TABLEAU",
        "TABLEAU",
        "TABLEAU",
        "TABLEAU"
      ],
      "runtime": 0.0024148019992935588
    },
    {
      "circuit": "GHZ_6",
      "alpha": 5,
      "steps": [
        "TABLEAU",
        "TABLEAU",
        "TABLEAU",
        "TABLEAU",
        "TABLEAU",
        "TABLEAU"
      ],
      "runtime": 0.0020748289998664404
    },
    {
      "circuit": "Grover_3",
      "alpha": 0.5,
      "steps": [
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR"
      ],
      "runtime": 0.10727333299928432
    },
    {
      "circuit": "Grover_3",
      "alpha": 1,
      "steps": [
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR"
      ],
      "runtime": 0.10128326900030515
    },
    {
      "circuit": "Grover_3",
      "alpha": 2,
      "steps": [
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR"
      ],
      "runtime": 0.10669870800029457
    },
    {
      "circuit": "Grover_3",
      "alpha": 5,
      "steps": [
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR"
      ],
      "runtime": 0.10314985799959686
    }
  ],
  "name": "Grover_3",
  "alpha": 5,
  "kwargs": {
    "conversion_cost_multiplier": 5
  },
  "start": 5318.181384137,
  "elapsed": 0.10314985799959686,
  "steps": [
    "STATEVECTOR",
    "STATEVECTOR",
    "STATEVECTOR",
    "STATEVECTOR",
    "STATEVECTOR",
    "STATEVECTOR",
    "STATEVECTOR",
    "STATEVECTOR",
    "STATEVECTOR",
    "STATEVECTOR",
    "STATEVECTOR",
    "STATEVECTOR",
    "STATEVECTOR",
    "STATEVECTOR",
    "STATEVECTOR",
    "STATEVECTOR",
    "STATEVECTOR",
    "STATEVECTOR",
    "STATEVECTOR",
    "STATEVECTOR",
    "STATEVECTOR",
    "STATEVECTOR",
    "STATEVECTOR",
    "STATEVECTOR",
    "STATEVECTOR",
    "STATEVECTOR",
    "STATEVECTOR",
    "STATEVECTOR",
    "STATEVECTOR",
    "STATEVECTOR",
    "STATEVECTOR",
    "STATEVECTOR",
    "STATEVECTOR"
  ],
  "results": [
    {
      "circuit": "GHZ_6",
      "alpha": 0.5,
      "steps": [
        "TABLEAU",
        "TABLEAU",
        "TABLEAU",
        "TABLEAU",
        "TABLEAU",
        "TABLEAU"
      ],
      "runtime": 0.002997664999384142
    },
    {
      "circuit": "GHZ_6",
      "alpha": 1,
      "steps": [
        "TABLEAU",
        "TABLEAU",
        "TABLEAU",
        "TABLEAU",
        "TABLEAU",
        "TABLEAU"
      ],
      "runtime": 0.002592720999928133
    },
    {
      "circuit": "GHZ_6",
      "alpha": 2,
      "steps": [
        "TABLEAU",
        "TABLEAU",
        "TABLEAU",
        "TABLEAU",
        "TABLEAU",
        "TABLEAU"
      ],
      "runtime": 0.0024148019992935588
    },
    {
      "circuit": "GHZ_6",
      "alpha": 5,
      "steps": [
        "TABLEAU",
        "TABLEAU",
        "TABLEAU",
        "TABLEAU",
        "TABLEAU",
        "TABLEAU"
      ],
      "runtime": 0.0020748289998664404
    },
    {
      "circuit": "Grover_3",
      "alpha": 0.5,
      "steps": [
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR"
      ],
      "runtime": 0.10727333299928432
    },
    {
      "circuit": "Grover_3",
      "alpha": 1,
      "steps": [
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR"
      ],
      "runtime": 0.10128326900030515
    },
    {
      "circuit": "Grover_3",
      "alpha": 2,
      "steps": [
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR"
      ],
      "runtime": 0.10669870800029457
    },
    {
      "circuit": "Grover_3",
      "alpha": 5,
      "steps": [
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR"
      ],
      "runtime": 0.10314985799959686
    }
  ],
  "subset": [
    {
      "circuit": "Grover_3",
      "alpha": 0.5,
      "steps": [
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR"
      ],
      "runtime": 0.10727333299928432
    },
    {
      "circuit": "Grover_3",
      "alpha": 1,
      "steps": [
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR"
      ],
      "runtime": 0.10128326900030515
    },
    {
      "circuit": "Grover_3",
      "alpha": 2,
      "steps": [
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR"
      ],
      "runtime": 0.10669870800029457
    },
    {
      "circuit": "Grover_3",
      "alpha": 5,
      "steps": [
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR",
        "STATEVECTOR"
      ],
      "runtime": 0.10314985799959686
    }
  ],
  "max_frag": 33,
  "r": {
    "circuit": "Grover_3",
    "alpha": 5,
    "steps": [
      "STATEVECTOR",
      "STATEVECTOR",
      "STATEVECTOR",
      "STATEVECTOR",
      "STATEVECTOR",
      "STATEVECTOR",
      "STATEVECTOR",
      "STATEVECTOR",
      "STATEVECTOR",
      "STATEVECTOR",
      "STATEVECTOR",
      "STATEVECTOR",
      "STATEVECTOR",
      "STATEVECTOR",
      "STATEVECTOR",
      "STATEVECTOR",
      "STATEVECTOR",
      "STATEVECTOR",
      "STATEVECTOR",
      "STATEVECTOR",
      "STATEVECTOR",
      "STATEVECTOR",
      "STATEVECTOR",
      "STATEVECTOR",
      "STATEVECTOR",
      "STATEVECTOR",
      "STATEVECTOR",
      "STATEVECTOR",
      "STATEVECTOR",
      "STATEVECTOR",
      "STATEVECTOR",
      "STATEVECTOR",
      "STATEVECTOR"
    ],
    "runtime": 0.10314985799959686
  },
  "backends": [
    "STATEVECTOR"
  ],
  "mapping": {
    "STATEVECTOR": 0
  },
  "nb_name": "notebook"
}